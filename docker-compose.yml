version: '3.8'

services:

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    restart: always
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "admin@123"
    ports:
      - "1433:1433"
    networks:
      - dbt-network

  dbt:
    image: ghcr.io/dbt-labs/dbt-core:latest
    container_name: dbt
    depends_on:
      - sqlserver
    volumes:
      - ./dbt_project:/usr/app/dbt
      - ~/.gitconfig:/root/.gitconfig  # Git config for GitHub repo
      - ~/.ssh:/root/.ssh              # SSH keys for Git access
    networks:
      - dbt-network
    entrypoint: [ "/bin/bash", "-c", "apt-get update && apt-get install -y git && pip install dbt-sqlserver && tail -f /dev/null" ]

  postgres:
    image: postgres:15
    container_name: airflow-db
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dbt-network

  airflow:
    container_name: airflow
    build: 
      context: .
      dockerfile: Dockerfile.airflow
    restart: always
    depends_on:
      - dbt
      - postgres
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./dbt_project/dbtnewdemo/dbtproject:/usr/app/dbt
      - ./dbt_project/dbtnewdemo/dbtproject/target:/usr/app/dbt/target

    ports:
      - "8080:8080"
    command: webserver
    networks:
      - dbt-network

  airflow-scheduler:
    container_name: airflow-scheduler
    build: 
      context: .
      dockerfile: Dockerfile.airflow
    restart: always
    depends_on:
      - airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./dbt_project/dbtnewdemo/dbtproject:/usr/app/dbt
      - ./dbt_project/dbtnewdemo/dbtproject/target:/usr/app/dbt/target

    command: scheduler
    networks:
      - dbt-network

volumes:
  postgres_data:

networks:
  dbt-network:
    driver: bridge